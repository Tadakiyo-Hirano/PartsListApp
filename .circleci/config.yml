version: 2.1

jobs:
  test_backend:
    docker:
    # dockerイメージで使っているrubyバージョンと一致させる
      - image: circleci/ruby:3.0.0-rc1-buster-node-browsers
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          DB_PASSWORD: ''
      - image: circleci/postgres:13.1
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: test
          POSTGRES_HOST_AUTH_METHOD: trust # パスワードなし

    working_directory: ~/repo

    steps:
      - checkout

      # restore gem from cache
      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum "~/repo/Gemfile.lock" }}
            - gem-cache-v1-
          working_directory: ~/repo

      # gem install
      - run:
          command: |
            gem install bundler
            bundle config set path 'vendor/bundle'
            bundle install --jobs=4 --retry=3
          working_directory: ~/repo

      - save_cache:
          key: gem-cache-v1-{{ checksum "~/repo/Gemfile.lock" }}
          paths:
            - ~/repo/backend/vendor/bundle
          working_directory: ~/repo

      # Database setup
      - run:
          command: bundle exec rails db:create
          working_directory: ~/repo
      - run:
          command: bundle exec rails db:migrate
          working_directory: ~/repo

      - run:
          name: create directory to store test results
          command: mkdir /tmp/test-results
          working_directory: ~/repo

      # run tests
      - run:
          name: RSpec
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
          working_directory: ~/repo

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: /home/circleci/repo/tmp/screenshots


workflows:
  version: 2
  test:
    jobs:
      - test_backend:
          filters:
            branches:
              ignore: develop


# version: 2
# orbs:
#   ruby: circleci/ruby@0.1.2 

# jobs:
#   build:
#     docker:
#       - image: circleci/ruby:3.0.0-rc1-buster-node-browsers
#         environment:
#           RAILS_ENV: test
#           PGHOST: 127.0.0.1
#           PGUSER: root
#           TZ: "/usr/share/zoneinfo/Asia/Tokyo"
#       - image: circleci/postgres:13.1
#         environment:
#           POSTGRES_USER: root
#           POSTGRES_DB: myapp_test
#           POSTGRES_HOST_AUTH_METHOD: trust # パスワードなし
#           TZ: "/usr/share/zoneinfo/Asia/Tokyo"
#     steps:
#       - checkout
#       - restore_cache:
#           keys:
#             - v1-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
#             - v1-dependencies-
#       - run:
#           name: Bundler and Yarn
#           command: |
#             gem install bundler -v '2.1.4' -N
#             bundle -v
#             bundle install --jobs=3 --retry=3 --path vendor/bundle
#             yarn install
#       - run:
#           # db:structure:loadに必要
#           name: Install postgresql-client 
#           command: sudo apt install -y postgresql-client || true
#       - save_cache:
#           key: v1-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
#           paths:
#             - ./vendor/bundle
#             - ./node_modules
#       - run:
#           name: DB Initializing
#           command: |
#             dockerize -wait tcp://localhost:5432 -timeout 1m
#             bundle exec rails db:structure:dump
#           # bundle exec rake db:schema:load (db:schema:load の代わりに db:structure:load とする)
#       - run:
#           name: rspec
#           command: |
#             bundle exec rspec --format RspecJunitFormatter \
#                               --out test_results/rspec.xml \
#                               --format documentation
#       - store_test_results:
#           path: test_results










# version: 2

# jobs:
#   test:
#     docker:
#       - image: circleci/ruby:3.0.0-rc1-buster-node-browsers
#         # environment:
#         #   POSTGRES_USER: postgres 
#         #   RAILS_ENV: test
#         #   DATABASE_HOST: 127.0.0.1 
#       - image: circleci/postgres:13.1
#         environment:
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: postgres
#           POSTGRES_DB: myapp_test
#     working_directory: ~/myapp
#     steps:
#       - checkout
#       - run:
#           name: "bundle install"
#           # command: bundle config set --local path 'vendor/bundle'
#           command: bundle install --path vendor/bundle
#       # DBと接続できるまで待ちます
#       - run:
#           name: "waiting DB start"
#           command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
#       - run:
#           name: "initialize DB"
#           # command: bundle exec rails db:schema:load --trace
#           command: |
#             bundle exec rails db:create
#             bundle exec rails db:migrate

#       - run:
#           name: RSpec
#           command: bundle exec rspec

# workflows:
#   version: 2
#   workflows:
#     jobs:
#       - test
