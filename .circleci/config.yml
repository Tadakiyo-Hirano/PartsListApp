version: 2
jobs:
  build:
    working_directory: ~/myapp

    # すべてのコマンドを実行する場所となるプライマリ コンテナ イメージ

    docker:

      - image: circleci/ruby:3.0.0-rc1-buster-node-browsers
        # environment:
        #   POSTGRES_USER: postgres 
        #   PGHOST: 127.0.0.1
        #   RAILS_ENV: test

    # `host: localhost` でアクセスできるサービス コンテナ イメージ

      - image: circleci/postgres:13.1
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: myapp_test
          #下記を書けばパスワードなしでデータベースにログインしてくれる。 
          POSTGRES_HOST_AUTH_METHOD: trust

    steps:

      - checkout

      - run:
          command: |
            echo LOGIN_MAIL=${LOGIN_MAIL} > ~/.env
            echo LOGIN_PASSWORD=${LOGIN_PASSWORD} >> ~/.env

      # バンドル キャッシュを復元します

      - restore_cache:
          keys:
            - rails-demo-{{ checksum "Gemfile.lock" }}
            - rails-demo-

      # 依存関係をバンドル インストールします

      - run:
          name: 依存関係のインストール
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs 4 --retry 3

      - run: sudo apt install -y postgresql-client || true

      # バンドル キャッシュを保存します

      - save_cache:
          key: rails-demo-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
            name: DBの起動を待つ
            command: dockerize -wait tcp://127.0.0.1:5432 -timeout 120s
      
      - run: sudo apt-get update
      - run: sudo apt-get install postgresql-client

      - run:
          name: データベースのセットアップ
          command: |
            bundle exec rake db:create db:schema:load --trace

      - run:
          name: RSpec の並列実行
          command: bin/rails test

      # アーティファクトを保存します

      - store_test_results:
          path: /tmp/test-results



# version: 2
# jobs:
#   build:
#     working_directory: ~/myapp
#     docker:
#       - image: circleci/ruby:3.0.0-rc1-buster-node-browsers
#         environment:
#           BUNDLE_RETRY: 3
#           BUNDLE_PATH: vendor/bundle
#           # DATABASE_URL: postgres://postgres:password@localhost:5432/myapp_test
#           RAILS_ENV: test
#           DB_HOST: 127.0.0.1
#           DB_PASSWORD: ''
#       - image: circleci/postgres:13.1
#         environment:
#           POSTGRES_USER: root
#           POSTGRES_DB: circleci_testdb
#           POSTGRES_HOST_AUTH_METHOD: trust # パスワードなし
#     steps:
#       - checkout
#       - restore_cache:
#           keys:
#             - myapp-bundle-v1-{{ checksum "Gemfile.lock" }}
#             - myapp-bundle-v1-
#       - run:
#           name: Bundlerをinstall
#           command: |
#             gem update --system
#             gem install bundler
#       - run:
#           name: Bundle Install
#           command: bundle check || bundle install
#       - save_cache:
#           key: myapp-bundle-v1-{{ checksum "Gemfile.lock" }}
#           paths:
#             - vendor/bundle
#       - restore_cache:
#           keys:
#             - rails-demo-yarn-{{ checksum "yarn.lock" }}
#             - rails-demo-yarn-
#       - run:
#           name: Yarnをinstall
#           command: yarn install --cache-folder ~/.cache/yarn
#       - run:
#           name: Wait for DB
#           command: dockerize -wait tcp://127.0.0.1:5432 -timeout 1m
#       - run:
#           name: Database setup
#           command: bundle exec rails db:create db:structure:load --trace
#       - run: bundle exec bin/webpack
#       - run:
#           name: execute rspec
#           command: bundle exec rspec
#       - store_test_results:
#           path: /tmp/test-results


# version: 2
# orbs:
#   ruby: circleci/ruby@0.1.2 

# jobs:
#   build:
#     docker:
#       - image: circleci/ruby:3.0.0-rc1-buster-node-browsers
#         environment:
#           RAILS_ENV: test
#           PGHOST: 127.0.0.1
#           PGUSER: root
#           TZ: "/usr/share/zoneinfo/Asia/Tokyo"
#       - image: circleci/postgres:13.1
#         environment:
#           POSTGRES_USER: root
#           POSTGRES_DB: myapp_test
#           POSTGRES_HOST_AUTH_METHOD: trust # パスワードなし
#           TZ: "/usr/share/zoneinfo/Asia/Tokyo"
#     steps:
#       - checkout
#       - restore_cache:
#           keys:
#             - v1-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
#             - v1-dependencies-
#       - run:
#           name: Bundler and Yarn
#           command: |
#             gem install bundler -v '2.1.4' -N
#             bundle -v
#             bundle install --jobs=3 --retry=3 --path vendor/bundle
#             yarn install
#       - run:
#           # db:structure:loadに必要
#           name: Install postgresql-client 
#           command: sudo apt install -y postgresql-client || true
#       - save_cache:
#           key: v1-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
#           paths:
#             - ./vendor/bundle
#             - ./node_modules
#       - run:
#           name: DB Initializing
#           command: |
#             dockerize -wait tcp://localhost:5432 -timeout 1m
#             bundle exec rails db:structure:dump
#           # bundle exec rake db:schema:load (db:schema:load の代わりに db:structure:load とする)
#       - run:
#           name: rspec
#           command: |
#             bundle exec rspec --format RspecJunitFormatter \
#                               --out test_results/rspec.xml \
#                               --format documentation
#       - store_test_results:
#           path: test_results










# version: 2

# jobs:
#   test:
#     docker:
#       - image: circleci/ruby:3.0.0-rc1-buster-node-browsers
#         # environment:
#         #   POSTGRES_USER: postgres 
#         #   RAILS_ENV: test
#         #   DATABASE_HOST: 127.0.0.1 
#       - image: circleci/postgres:13.1
#         environment:
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: postgres
#           POSTGRES_DB: myapp_test
#     working_directory: ~/myapp
#     steps:
#       - checkout
#       - run:
#           name: "bundle install"
#           # command: bundle config set --local path 'vendor/bundle'
#           command: bundle install --path vendor/bundle
#       # DBと接続できるまで待ちます
#       - run:
#           name: "waiting DB start"
#           command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
#       - run:
#           name: "initialize DB"
#           # command: bundle exec rails db:schema:load --trace
#           command: |
#             bundle exec rails db:create
#             bundle exec rails db:migrate

#       - run:
#           name: RSpec
#           command: bundle exec rspec

# workflows:
#   version: 2
#   workflows:
#     jobs:
#       - test
